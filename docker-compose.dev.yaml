services:
  mysql:
    extends:
      file: docker-compose.infra.yaml
      service: mysql
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 20s
      retries: 10
      start_period: 10s

  mongodb:
    extends:
      file: docker-compose.infra.yaml
      service: mongodb
    volumes:
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  rabbitmq:
    extends:
      file: docker-compose.infra.yaml
      service: rabbitmq

  mongo-express:
    extends:
      file: docker-compose.infra.yaml
      service: mongo-express

  localstack:
    extends:
      file: docker-compose.infra.yaml
      service: localstack

  config-server:
    build: ./ConfigServer
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_URL: http://eureka-server:8761
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  eureka-server:
    build: ./Eureka
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    

  gateway:
    build: ./Gateway
    container_name: gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      EUREKA_URL: http://eureka-server:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

  authentication:
    restart: on-failure
    build:
      context: ./authentication
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/AuthenticationService?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: mysecretpassword
      FRONTEND_URL: http://localhost:8000 # Frontend URL for development
    ports:
      - "9081:9081"
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  employee-service:
    restart: on-failure
    build:
      context: ./EmployeeService
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MONGODB_URL: mongodb://mongodb:27017/EmployeeService
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: mysecretpassword
      FRONTEND_URL: http://localhost:8000 # Frontend URL for development
    ports:
      - "9082:9082"
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
  
  application-service:
    restart: on-failure
    build:
      context: ./ApplicationService
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/ApplicationService?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: mysecretpassword
      FRONTEND_URL: http://localhost:8000 # Frontend URL for development
    ports:
      - "9083:9083"
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  housing-service:
    restart: on-failure
    build:
      context: ./HousingService
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/HousingService?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: mysecretpassword
      FRONTEND_URL: http://localhost:8000 # Frontend URL for development
    ports:
      - "9083:9083"
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
  

  email-service:
    build:
      context: ./EmailService
      dockerfile: Dockerfile
    container_name: email-service
    ports:
      - "8085:8085"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      MAIL_USERNAME: YOUR_MAIL_USERNAME
      MAIL_PASSWORD: YOUR_MAIL_PASSWORD
      MAIL_HOST: YOUR_MAIL_HOST
      MAIL_PORT: YOUR_MAIL_PORT
    depends_on:
      - config-server
      - eureka-server
      - rabbitmq
    secrets:
      - email

secrets:
  email:
    file: ./secrets/mail.txt